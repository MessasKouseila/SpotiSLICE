// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `app.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package appli;

public interface CentralPrx extends Ice.ObjectPrx
{
    public music[] findByName(String nameSong);

    public music[] findByName(String nameSong, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByName(String nameSong);

    public Ice.AsyncResult begin_findByName(String nameSong, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByName(String nameSong, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByName(String nameSong, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByName(String nameSong, Callback_Central_findByName __cb);

    public Ice.AsyncResult begin_findByName(String nameSong, java.util.Map<String, String> __ctx, Callback_Central_findByName __cb);

    public Ice.AsyncResult begin_findByName(String nameSong, 
                                            IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_findByName(String nameSong, 
                                            IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_findByName(String nameSong, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_findByName(String nameSong, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public music[] end_findByName(Ice.AsyncResult __result);

    public music[] findByAuth(String nameAuthor);

    public music[] findByAuth(String nameAuthor, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByAuth(String nameAuthor);

    public Ice.AsyncResult begin_findByAuth(String nameAuthor, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByAuth(String nameAuthor, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByAuth(String nameAuthor, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByAuth(String nameAuthor, Callback_Central_findByAuth __cb);

    public Ice.AsyncResult begin_findByAuth(String nameAuthor, java.util.Map<String, String> __ctx, Callback_Central_findByAuth __cb);

    public Ice.AsyncResult begin_findByAuth(String nameAuthor, 
                                            IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_findByAuth(String nameAuthor, 
                                            IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_findByAuth(String nameAuthor, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_findByAuth(String nameAuthor, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public music[] end_findByAuth(Ice.AsyncResult __result);

    public music[] findByAlbum(String nameAlbum);

    public music[] findByAlbum(String nameAlbum, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByAlbum(String nameAlbum);

    public Ice.AsyncResult begin_findByAlbum(String nameAlbum, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByAlbum(String nameAlbum, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByAlbum(String nameAlbum, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByAlbum(String nameAlbum, Callback_Central_findByAlbum __cb);

    public Ice.AsyncResult begin_findByAlbum(String nameAlbum, java.util.Map<String, String> __ctx, Callback_Central_findByAlbum __cb);

    public Ice.AsyncResult begin_findByAlbum(String nameAlbum, 
                                             IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_findByAlbum(String nameAlbum, 
                                             IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_findByAlbum(String nameAlbum, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_findByAlbum(String nameAlbum, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public music[] end_findByAlbum(Ice.AsyncResult __result);

    public music[] findByGenre(String nameGenre);

    public music[] findByGenre(String nameGenre, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByGenre(String nameGenre);

    public Ice.AsyncResult begin_findByGenre(String nameGenre, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByGenre(String nameGenre, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByGenre(String nameGenre, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByGenre(String nameGenre, Callback_Central_findByGenre __cb);

    public Ice.AsyncResult begin_findByGenre(String nameGenre, java.util.Map<String, String> __ctx, Callback_Central_findByGenre __cb);

    public Ice.AsyncResult begin_findByGenre(String nameGenre, 
                                             IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_findByGenre(String nameGenre, 
                                             IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_findByGenre(String nameGenre, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_findByGenre(String nameGenre, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public music[] end_findByGenre(Ice.AsyncResult __result);

    public String getStreamer();

    public String getStreamer(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getStreamer();

    public Ice.AsyncResult begin_getStreamer(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getStreamer(Ice.Callback __cb);

    public Ice.AsyncResult begin_getStreamer(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getStreamer(Callback_Central_getStreamer __cb);

    public Ice.AsyncResult begin_getStreamer(java.util.Map<String, String> __ctx, Callback_Central_getStreamer __cb);

    public Ice.AsyncResult begin_getStreamer(IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getStreamer(IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_getStreamer(java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getStreamer(java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public String end_getStreamer(Ice.AsyncResult __result);

    public music[] getAllAvailableSong();

    public music[] getAllAvailableSong(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAllAvailableSong();

    public Ice.AsyncResult begin_getAllAvailableSong(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAllAvailableSong(Ice.Callback __cb);

    public Ice.AsyncResult begin_getAllAvailableSong(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getAllAvailableSong(Callback_Central_getAllAvailableSong __cb);

    public Ice.AsyncResult begin_getAllAvailableSong(java.util.Map<String, String> __ctx, Callback_Central_getAllAvailableSong __cb);

    public Ice.AsyncResult begin_getAllAvailableSong(IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getAllAvailableSong(IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_getAllAvailableSong(java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getAllAvailableSong(java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_GenericCallback1<music[]> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    public music[] end_getAllAvailableSong(Ice.AsyncResult __result);
}
